@use "sass:list";
@use "sass:color";
@import url("https://fonts.googleapis.com/css2?family=Red+Hat+Text&display=swap");
@import "variables";
@import "mixins";

@keyframes flipTop {
  0% {
    transform: rotateX(0deg) perspective(200px);
  }
  50% {
    transform: rotateX(-90deg) perspective(200px);
  }
  100% {
    transform: rotateX(-90deg) perspective(200px);
  }
}

@keyframes flipBottom {
  0% {
    transform: rotateX(90deg) perspective(200px);
  }
  50% {
    transform: rotateX(0deg) perspective(200px);
  }
  100% {
    transform: rotateX(0deg) perspective(200px);
  }
}

* {
  box-sizing: border-box;
}

html {
  font: {
    family: "Red Hat Text", sans-serif;
    size: 62.5%;
    weight: 700;
  }
  color: white;
}

body {
  background: center / cover url("../images/bg-stars.svg"),
    linear-gradient(
      $page-background-color 0%,
      color.adjust($page-background-color, $red: 10) 100%
    );
  display: flex;
  flex-direction: column;
  font-size: 1.4rem;
  margin: 0;
  height: 100vh;
}

.main-content {
  flex: 1 0 auto;
  padding: 0 25px;
  text-align: center;
}

.heading {
  text-transform: uppercase;
  letter-spacing: 0.6rem;
  font-size: 2rem;
  margin-top: 14rem;
}

.timer {
  display: flex;
  justify-content: center;
  margin: 5rem auto;
  width: 100%;
  max-width: 700px;
}

.widget {
  width: 7rem;
  overflow: hidden;
  position: relative;
  text-align: center;
  margin: 0 0.7rem;
  @media screen and (min-width: 768px) {
    width: 14.8rem;
    margin: 0 1.6rem;
  }
}

.widget__wrapper {
  font-size: 4rem;
  line-height: 1.65;
  height: 6.6rem;
  width: 100%;
  position: relative;
  color: $soft-red;
  @media screen and (min-width: 768px) {
    font-size: 9rem;
    line-height: 1.58;
    height: 14rem;
  }
  & [class*="top-back"],
  & [class*="top-front"] {
    display: inline-block;
    background-color: $widget-background;
    border-radius: 5px 5px 0 0;
    filter: brightness(0.8);
    height: 100%;
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
    clip-path: polygon(0% 0%, 100% 0%, 100% 50%, 0% 50%);
  }

  & [class*="top-front"] {
    transform-origin: 0 50%;
  }

  & [class*="bottom-back"] {
    display: inline-block;
    background-color: $widget-background;
    border-radius: 0.5rem;
    clip-path: polygon(0% 100%, 100% 100%, 100% 50%, 0% 50%);
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    position: absolute;
    box-shadow: 0 5px 2px $shadow;
    @media screen and (min-width: 768px) {
      box-shadow: 0 10px 3px $shadow;
    }
  }
  [class*="bottom-front"] {
    @extend [class*="bottom-back"];
    box-shadow: unset;
    transform-origin: 0 50%;
    transform: rotateX(90deg) perspective(200px);
  }
  &::before,
  &::after {
    content: "";
    width: 5px;
    height: 5px;
    border-radius: 50%;
    background-color: $page-background-color;
    position: absolute;
    z-index: 4;
    left: 0;
    top: 50%;
    transform: translate(-50%, -50%);
    @media screen and (min-width: 768px) {
      width: 12px;
      height: 12px;
    }
  }
  &::after {
    left: auto;
    right: 0;
    transform: translate(50%, -50%);
  }
}

@include stack-widget-upper-parts;

.flip-top {
  animation: flipTop 1s 0s linear infinite;
}

.flip-bottom {
  animation: flipBottom 1s 0.5s linear infinite;
}

.label {
  color: $labels-color;
  display: block;
  font-size: 0.8rem;
  letter-spacing: 0.3rem;
  text: {
    align: center;
    transform: uppercase;
  }
  margin: 1.5rem auto;
  @media screen and (min-width: 768px) {
    font-size: 1.4rem;
    letter-spacing: 0.5rem;
  }
}

.page-footer {
  background: 82% bottom / auto 100% repeat-x url("../images/pattern-hills.svg");
  min-height: 170px;
  display: flex;
  flex-direction: column;
  .icons-container {
    display: flex;
    flex: 1 0 auto;
    justify-content: center;
    .icon-wrapper {
      color: $labels-color;
      margin: 0 1.5rem 4rem;
      align-self: flex-end;
      transition: color 0.3s;
      &:hover {
        color: $soft-red;
      }
    }
  }
}

.attribution {
  font: {
    size: 11px;
    weight: normal;
  }
  text-align: center;
}

.attribution a {
  color: hsl(42, 93%, 60%);
}
